#!/bin/bash

# SHELLRC finder
mkdir "$HOME"/git "$HOME"/Applications "$HOME"/.config/mt_tools "$HOME"/.config/waybar "$HOME"/.local/share/bin "$HOME"/.config/mt_tools "$HOME"/.local/share/fonts
mkdir -p $HOME/.config/sway && cp -i /etc/sway/config $HOME/.config/sway/



case "$SHELL" in
*bash*)
    SHELLRC="$HOME/.bashrc" && export SHELLRC
    ;;
*zsh*)
    SHELLRC="$HOME/.zshrc" && export SHELLRC
    ;;
esac

# PACKAGEMANAGER finder
which dnf &>/dev/null && PACKAGEMANAGER="dnf"
which apt &>/dev/null && PACKAGEMANAGER="apt"
which pacman &>/dev/null && PACKAGEMANAGER="pacman"

cat $SHELLRC | grep "PACKAGEMANAGER" && ISPACMAN=1 || ISPACMAN=0

case $ISPACMAN in
0)
    export PACKAGEMANAGER
    echo "PACKAGEMANAGER=$PACKAGEMANAGER" >>$SHELLRC
    echo "export PACKAGEMANAGER" >>$SHELLRC
    ;;
1)
    echo "Package manager set to $PACKAGEMANAGER"
    ;;
esac

# PMINSTALL and PMUPDATE manager
PACKAGESREQ="zsh flatpak git"
PACKAGESIMP="kitty bat neofetch ranger"
PACKAGESOPT="tldr"


case $PACKAGEMANAGER in
dnf)
    PMINSTALL="sudo dnf install"
    echo "sudo dnf update" >/tmp/mt_update
    ;;
apt)
    PMINSTALL="sudo apt install"
    echo "sudo apt update" >/tmp/mt_update
    ;;
pacman)
    PMINSTALL="sudo pacman -S"
    echo "sudo pacman -Syu" >/tmp/mt_update
    ;;
esac

which flatpak &>/dev/null && echo "flatpak update" >>/tmp/mt_update
which snap &>/dev/null && echo "snap update" >>/tmp/mt_update
which am &>/dev/null && echo "am update" >>/tmp/mt_update















# required programs

clear

$PMINSTALL $PACKAGESREQ
cd "$HOME"/Downloads
wget http://zsync.moria.org.uk/download/zsync-0.6.2.tar.bz2
tar -x -f zsync*
cd $(echo zsync*/)
./configure
make -j4
sudo make install
cd "$HOME"/Downloads
rm -r zsync*
cd
wget https://raw.githubusercontent.com/ivan-hc/APPLICATION-MANAGER/main/INSTALL && chmod a+x ./INSTALL && sudo ./INSTALL
am -i appimagelauncher

# install flatpak
flatpak remote-add --if-not-exists flathub https://flathub.org/repo/flathub.flatpakrepo













# proprietary software

clear

read -p "Install heavily recommended proprietary software? [Y/n]:  " INSTALLPACKAGESPROP
case $INSTALLPACKAGESPROP in
n | N | No | no | NO)
    echo "Skipping proprietary software."
    ;;
"" | *)
    case $PACKAGEMANAGER in
    dnf)
        sudo dnf install https://mirrors.rpmfusion.org/free/fedora/rpmfusion-free-release-$(rpm -E %fedora).noarch.rpm https://mirrors.rpmfusion.org/nonfree/fedora/rpmfusion-nonfree-release-$(rpm -E %fedora).noarch.rpm
        sudo dnf install gstreamer1-plugins-{bad-\*,good-\*,base} gstreamer1-plugin-openh264 gstreamer1-libav --exclude=gstreamer1-plugins-bad-free-devel
        sudo dnf install gstreamer1-plugins-{bad-*,good-*,base} gstreamer1-plugin-openh264 gstreamer1-libav --exclude=gstreamer1-plugins-bad-free-devel
        sudo dnf install lame* --exclude=lame-devel
        sudo dnf group upgrade --with-optional Multimedia
        ;;
    apt) ;;

    pacman) ;;

    esac
    ;;
esac











# important programs

clear

read -p "Install recommended software? [Y/n]:  " INSTALLPACKAGESIMP
case $INSTALLPACKAGESIMP in
n) echo "Skipping important software." ;;
"" | *)
    $PMINSTALL $PACKAGESIMP
    ;;
esac












# optional programs

clear

read -p "Install optional software? [y/N]:  " INSTALLPACKAGESOPT
case INSTALLPACKAGESOPT in
y | Y | yes | Yes | YES)
    $PMINSTALL $PACKAGESOPT
    flatpak install flathub md.obsidian.Obsidian
    flatpak install flathub com.vscodium.codium
    am -i feishin
    wget --output-document="$HOME"/.local/share/bin/pfetch https://raw.githubusercontent.com/andreasgrafen/pfetch-with-kitties/main/pfetch && chmod +x .local/share/bin/pfetch
    ;;
"" | *) echo "Skipping optional software." ;;
esac














# mt_tools

clear

read -p "Install mt_tools (daily workflow helper) [y/N]:  " INSTALLMT_TOOLS
case $INSTALLMT_TOOLS in
y | Y | yes | Yes | YES)
    echo "Install as mt_tools or mt? This will be the command used to invoke this program. There are no major packages that use \"mt\", so it should be safe to use."
    echo "1: mt_tools"
    echo "2: mt"
    read INSTALLMT_TOOLSAS
    case $INSTALLMT_TOOLSAS in
    1 | mt_tools)
        wget https://raw.githubusercontent.com/martyTF/mt_tools/master/mt_tools && mv mt_tools "$HOME"/.local/share/bin/mt_tools
        chmod +x "$HOME"/.local/share/bin/mt_tools
        ;;
    2 | mt)
        wget https://raw.githubusercontent.com/martyTF/mt_tools/master/mt_tools && mv mt_tools "$HOME"/.local/share/bin/mt
        chmod +x "$HOME"/.local/share/bin/mt
        ;;
    "" | *)
        echo "Installing as mt_tools (default)"
        wget https://raw.githubusercontent.com/martyTF/mt_tools/master/mt_tools && mv mt_tools "$HOME"/.local/share/bin/mt_tools
        chmod +x "$HOME"/.local/share/bin/mt_tools
        ;;
    esac
    ;;
"" | *) echo "Skipping mt_tools." ;;
esac





# configuration

clear


curl https://raw.githubusercontent.com/martyTF/mt_tools/master/configkitty | sh


# customization

cd "$HOME"/Downloads
wget https://github.com/ryanoasis/nerd-fonts/releases/download/v3.0.2/FiraCode.zip
unzip FiraCode.zip
mv *.ttf "$HOME"/.local/share/fonts
rm FiraCode.zip LICENSE readme.md
cd



echo "include $HOME/.config/dotfiles/kitty/kitty.conf" >> ~/.config/kitty/kitty.conf
